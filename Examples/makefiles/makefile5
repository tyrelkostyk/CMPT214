# makefile for binary tree example
# Author: Tony Kusalik

# Adding variables.
#  Actually better to think of them as macros
#  By convention, use upper case for variable names
#  Expanded by using $( ) 
#  Some have special meaning to make; e.g. CFLAGS

CFLAGS = -Wall -Wextra
# CFLAGS = -Wall -Wextra -g

.PHONY: all examples clean

all: bintree examples

BINTREE_OBJ = test.o traversal.o tree.o bintree.o

bintree: $(BINTREE_OBJ)
	gcc $(BINTREE_OBJ) -o bintree

tree.o: tree.c tree.h
	gcc $(CFLAGS) -c tree.c

traversal.o: traversal.c traversal.h tree.h
	gcc $(CFLAGS) -c traversal.c

test.o: test.c test.h tree.h traversal.h
	gcc $(CFLAGS) -c test.c

bintree.o: bintree.c test.h
	gcc $(CFLAGS) -c bintree.c

examples: example_80 example_82

example_80: example_80.o
	gcc example_80.o -o example_80

example_82: example_82.o
	gcc example_82.o -o example_82

example_80.o: example_80.c
	gcc $(CFLAGS) -c example_80.c

example_82.o: example_82.c
	gcc $(CFLAGS) -c example_82.c

clean:
	rm -f tree.o traversal.o test.o bintree.o
	rm -f example_82.o example_80.o
	rm -f bintree example_82 example_80
